am.glm = glm(formula=am ~ hp + wt, data=mtcars, family=binomial)
summary(am.glm)
install.packages("ISLR")
library(MASS)
library(ISLR)
fix(Boston)
install.packages("XQuartz")
Boston
library(MASS)
library(ISLR)
fix(Boston)
library(MASS)
library(ISLR)
fix(Boston)
```{r}
load(mtcars)
```
library(mtcars)
library(datasets)
data(mtcars)
Residual plots of the best model as evaluated by the stepwise regression:
```{r}
par(mfrow=c(2, 2))
plot(best.model)
```
# load mtcars:
data(mtcars)
# Make factors:
mtcars$cyl = factor(mtcars$cyl)
mtcars$vs = factor(mtcars$vs)
mtcars$gear = factor(mtcars$gear)
mtcars$carb = factor(mtcars$carb)
mtcars$am = factor(mtcars$am,labels=c('Automatic','Manual'))
# Determine best model:
full.model = lm(mpg ~ ., data = mtcars)
best.model = step(full.model, direction = "backward")
# Residual plots of the best model as evaluated by the stepwise regression:
par(mfrow=c(2, 2))
plot(best.model)
# Evaluate collinearity:
library(car)
vif(best.model) # variance inflation factors
# Boxplot of miles per gallon by transmission type:
boxplot(mpg ~ am, data = mtcars, col = "blue", ylab = "miles per gallon")
# Describes the transmission type (am) by the horsepower (hp) and weight (wt).
am.glm = glm(formula=am ~ hp + wt, data=mtcars, family=binomial)
summary(am.glm)
View(mtcars)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
lm(mpg ~ wt + cyl, data = mtcars)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model = lm(mpg ~ wt + cyl, data = mtcars)
summary(model)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model = lm(mpg ~ cyl + wt, data = mtcars)
summary(model)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl, data = mtcars)
summary(model2)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl * wt, data = mtcars)
summary(model2)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl * wt, data = mtcars)
summary(model2)
model2 = lm(mpg ~ cyl + wt + cyl:wt, data = mtcars)
summary(model2)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl + wt + cyl:wt, data = mtcars)
summary(model2)
lrtest(model1, model2)
library(lmtest)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl + wt + cyl:wt, data = mtcars)
summary(model2)
lrtest(model1, model2)
install.packages("lmtest")
library(lmtest)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl + wt + cyl:wt, data = mtcars)
summary(model2)
lrtest(model1, model2)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
summary(model1)
model2 = lm(mpg ~ cyl, data = mtcars)
summary(model2)
# Question 3:
library(lmtest)
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
model1$coef
model2 = lm(mpg ~ cyl*wt, data = mtcars)
model2$coef
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
model1$coef
model2 = lm(mpg ~ cyl*wt, data = mtcars)
model2$coef
data(mtcars)
mtcars$cyl = factor(mtcars$cyl)
model1 = lm(mpg ~ cyl + wt, data = mtcars)
model1$coef
model2 = lm(mpg ~ cyl*wt, data = mtcars)
model2$coef
anova(model1, model2)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
model = lm(y ~ x)
max(hatvalues(model))
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
model <- lm(y ~ x)
influence.measures(model)$infmat[5, 'dfb.x']
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
model = lm(y ~ x)
max(hatvalues(model))
plot(hatvalues(model), type = "h")
plot(x, y)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
model <- lm(y ~ x)
dfbetas(model)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbetaPlots( model <- lm(y ~ x) )
library(car)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbetaPlots( model <- lm(y ~ x) )
dfbetasPlots( model <- lm(y ~ x) )
library(car)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbetasPlots( model <- lm(y ~ x) )
# Question 1, 2:
# Give a P-value for the two sided hypothesis test of whether Î²1 from a linear regression model is 0 or not.
# Consider the previous problem, give the estimate of the residual standard deviation.
x = c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y = c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
model = lm(formula = y ~ x)
summary(model)
setwd("~/Programming/R/Regression Models")
library(MASS)
data(?shuttle)
library(MASS)
data(shuttle)
library(MASS)
data(shuttle)
library(MASS)
df = data(shuttle)
data(mtcars)
library(MASS)
data(shuttle)
library(MASS)
data(shuttle)
summary(shuttle)
View(shuttle)
shuttle$auto = 0
shuttle$auto[shuttle$auto =="auto"] = 1
View(shuttle)
library(MASS)
data(shuttle)
library(MASS)
data(shuttle)
View(shuttle)
shuttle$use = 0
shuttle$use[shuttle$auto =="auto"] = 1
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$auto =="auto"] = 1
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(mylogit))
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
1 / 1.032323
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind + magn, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ factor(wind), data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind - 1, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
# Consider the previous problem. Give the estimated odds ratio for autolander
# use comparing head winds (numerator) to tail winds (denominator) adjusting for
# wind strength from the variable magn.
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind + magn - 1, data=shuttle, family='binomial')
summary(logit)
0.2513144 / 0.2831263
1.285714 / 1.327273
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind - 1, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
# Consider the previous problem. Give the estimated odds ratio for autolander
# use comparing head winds (numerator) to tail winds (denominator) adjusting for
# wind strength from the variable magn.
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind + magn - 1, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
1.4383682 / 1.4851533
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
# Consider the previous problem. Give the estimated odds ratio for autolander
# use comparing head winds (numerator) to tail winds (denominator) adjusting for
# wind strength from the variable magn.
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind + magn, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ -wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle&wind = factor(shuttle&wind)
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind -1 , data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind , data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
## odds ratios only
exp(1 /coef(logit))
## odds ratios only
1 /exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
shuttle$magn = factor(shuttle$mag)
logit = glm(useD~ -wind + magn, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
logit = glm(useD~ -wind + magn, data=shuttle, family='binomial')
summary(logit)
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
shuttle$magn = factor(shuttle$mag)
logit = glm(useD~ wind + magn, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind , data=shuttle, family='logit')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind , data=shuttle, family='logit')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind , data=shuttle, family='logit')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind , data=shuttle, family = binomial(link = "logit"))
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ factor(wind) , data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind - 1, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
1.285714 / 1.327273
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
shuttle$magn = factor(shuttle$mag)
logit = glm(useD~ wind + magn -1, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
0.25131443 + 0.03181183
0.25131443 / 0.2831263
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
library(MASS)
data(shuttle)
shuttle$useD = 0
shuttle$useD[shuttle$use=="auto"] = 1
shuttle$wind = factor(shuttle$wind)
logit = glm(useD~ I(1 * (wind == 'tail')) + I(1 * (wind == 'head')) , data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
logit = glm(useD ~ wind, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
logit = glm(useD ~ wind - 1, data=shuttle, family='binomial')
summary(logit)$coef
## odds ratios only
exp(coef(logit))
# model with omitted intercept
logit = glm(useD~ wind + magn - 1, data=shuttle, family='binomial')
summary(logit)
## odds ratios only
exp(coef(logit))
